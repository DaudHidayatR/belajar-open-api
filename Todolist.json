{
  "openapi": "3.0.3",
  "info": {
    "title": "Todolist RESTful API",
    "version": "1.0",
    "description": "Todolist RESTful API",
    "termsOfService": "https://github.com/DaudHidayatR",
    "contact": {
      "name": "Daud Hidayat Ramadhan",
      "email": "daud28ramadhan@gmail.com",
      "url": "https://github.com/DaudHidayatR"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "Todolist RESTful API",
      "url": "https://{environment}.daud.com/DaudHidayatR",
      "variables": {
        "environment": {
          "description": "Server Environment",
          "default": "dev",
          "enum": [
            "dev",
            "qa",
            "prod"
          ]
        }
      }
    }

  ],
  "externalDocs": {
    "description": "Linkendin daud hidayat ramadhan",
    "url": "https://www.linkedin.com/in/daud-hidayat-ramadhan-98a5251b1"
  },
  "paths": {
    "/todolist": {
      "get":{
        "summary": "Get all todolist",
        "description": "Get all active todolist by default",
        "parameters": [
          {
            "name": "include done",
            "in": "query",
            "required": false,
            "description": "Include done todolist",
            "schema": {
              "type": "boolean",
              "default": true,
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter todolist by name",
            "schema": {
              "type": "string",
              "nullable": false,
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {

        }
      },
        "post":{
          "summary": "Create new todolist",
          "description": "Create new todolist to database",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "required": true
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int32",
                      "required": true,
                      "default": 1
                    },
                    "tags": {
                      "type": "array",
                      "required": false,
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {

          }
        }

    },
    "/todolist/{todolistId}": {
      "put": {
        "summary": "Update existing todolist",
        "description": "Update existing todolist to database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "Todolist for updated",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {

        }
      },
      "delete": {
        "summary": "Delete existing todolist",
        "description": "Delete existing todolist in database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "Todolist Id for deleted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {

        }
      }
    }
  }
}
